# --- ALLOWLIST YOUR DOMAINS ---
SetEnvIfNoCase Referer "^https?://(www\.)?hshub\.net" good_ref=1
SetEnvIfNoCase Referer "^https?://(www\.)?myhealthmatters\.life" good_ref=1
SetEnvIfNoCase Referer "^https?://(www\.)?dhgpro\.co\.uk" good_ref=1
SetEnvIfNoCase Referer "^https?://(www\.)?healthuniverse\.hshub\.net" good_ref=1

# --- BLOCK HOTLINKING TO STATIC ASSETS ---
<IfModule mod_rewrite.c>
RewriteEngine On
# If there is a Referer and it’s not one of ours, block images, css, js, pdf, mp4, etc.
RewriteCond %{HTTP_REFERER} !^$ 
RewriteCond %{ENV:good_ref} !1
RewriteRule \.(?:jpe?g|png|gif|webp|svg|css|js|pdf|mp4|mov|m4v|zip)$ - [F,NC]
</IfModule>

# --- CLICKJACKING & MIME SNIFF ---
Header always set X-Frame-Options "DENY"
Header always set X-Content-Type-Options "nosniff"
Header always set Referrer-Policy "strict-origin-when-cross-origin"
Header always set Permissions-Policy "camera=(), microphone=(), geolocation=()"









jlio;# Prevent clickjacking
Header always set X-Frame-Options "SAMEORIGIN"

# Prevent XSS attacks
Header set X-XSS-Protection "1; mode=block"

# Prevent MIME-type sniffing
Header set X-Content-Type-Options "nosniff"

# Content Security Policy (only load scripts/styles from your domain)
Header set Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self';"

<?php
// Security headers
header("X-Content-Type-Options: nosniff");
header("X-Frame-Options: DENY");
header("X-XSS-Protection: 1; mode=block");
header("Strict-Transport-Security: max-age=31536000; includeSubDomains");
header("Content-Security-Policy: default-src 'self';");

// Basic input sanitization
function sanitizeInput($input) {
    return htmlspecialchars(strip_tags($input), ENT_QUOTES, 'UTF-8');
}




Order Deny,Allow
Allow from some
Allow from 2001:4860:4860::8888
Allow from  2a09:bac5:37e1:26d2::3de:2f
Allow from 104.28.200.7 
Allow from 2001:4860:4860::8844
Allow from 2606:4700:4700::1111
Allow from 3.33.251.168
Allow from 15.197.225.128


?>
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/javascript application/json
</IfModule>

# Deny access to empty user agents
SetEnvIfNoCase User-Agent "^$" bad_bot
Order Allow,Deny
Allow from all
Deny from env=bad_bot


<hophij/>

# Block known bad bots
<IfModule mod_rewrite.c>
RewriteEngine On

# Block by User-Agent
RewriteCond %{HTTP_USER_AGENT} ^.*(AhrefsBot|SemrushBot|MJ12bot|DotBot|Baiduspider|YandexBot|Sogou|crawler|spider|bot).*$ [NC]
RewriteRule .* - [F,L]

# Block empty user agents
RewriteCond %{HTTP_USER_AGENT} ^-?$
RewriteRule .* - [F,L]
</IfModule>

healthuniverse/hops

<FilesMatch "\.(jpg|jpeg|png|gif|dynamic-ips)$">
AuthType Basic
AuthName "Restricted Area"
AuthType Strict
AuthName "Restricted Area"
AuthUserFile /home//devoraelsltd1/htpassdevoraelsltd/pwd=eljnbj;jk.m.9omnj;u['ygjllyl?>ssdddg7rtrrjhui£"390

server {
    listen 443 ssl;
    server_name healthuniverse.hshub.net
    ssl_certificate / etc / letsencrypt / live / healthuniverse.hsub.net.pem;
    ssl_certificate_key / etc / letsencrypt / live / healthuniverse.hshub.net / privkey.pem;

    root /var/www/html;
    index index.html;
}
// JavaScript source code

<? xml version = "1.0" encoding = "utf-8" ?>
    <Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">

        <!-- ...existing tags... -->

        <!-- Import environment-specific build properties for Dotfuscator, if they exist. -->
        <Import Project="$([System.Environment]::GetFolderPath(SpecialFolder.UserProfile))/.dotfuscator.user.props"
            Condition="Exists('$([System.Environment]::GetFolderPath(SpecialFolder.UserProfile))/.dotfuscator.user.props')" />

        <!-- Set build properties for Dotfuscator. -->
        <PropertyGroup>

            <!-- Specify the location of the MSBuild targets, if not already provided. -->
            <DotfuscatorMSBuildDir Condition="'$(DotfuscatorMSBuildDir)' == ''">$(MSBuildProgramFiles32)/MSBuild/PreEmptive/Dotfuscator/7</DotfuscatorMSBuildDir>

            <!-- Generate a default Dotfuscator config file (DotfuscatorConfig.xml) if it doesn't exist. -->
            <!-- TODO: Set this to false after the file is generated by the first local build. -->
            <DotfuscatorGenerateConfigFileIfMissing>true</DotfuscatorGenerateConfigFileIfMissing>

            <!-- Enable Dotfuscator for Release builds. -->
            <DotfuscatorEnabled Condition="'$(Configuration)' == 'Release'">true</DotfuscatorEnabled>

        </PropertyGroup>

        <!-- Import the Dotfuscator MSBuild targets. Must be done last. -->
        <Import Project="$(DotfuscatorMSBuildDir)/PreEmptive.Dotfuscator.Common.targets" />

    </Project>





